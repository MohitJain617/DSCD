# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import registryserver_pb2 as registryserver__pb2


class RegistryServerStub(object):
    """Registry server messages
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterReplica = channel.unary_unary(
                '/backuprs.RegistryServer/RegisterReplica',
                request_serializer=registryserver__pb2.ReplicaDetails.SerializeToString,
                response_deserializer=registryserver__pb2.RequestStatus.FromString,
                )
        self.GetReplicaList = channel.unary_unary(
                '/backuprs.RegistryServer/GetReplicaList',
                request_serializer=registryserver__pb2.ClientDetails.SerializeToString,
                response_deserializer=registryserver__pb2.ReplicaList.FromString,
                )
        self.GetReadReplicaList = channel.unary_unary(
                '/backuprs.RegistryServer/GetReadReplicaList',
                request_serializer=registryserver__pb2.ClientDetails.SerializeToString,
                response_deserializer=registryserver__pb2.ReplicaList.FromString,
                )
        self.GetWriteReplicaList = channel.unary_unary(
                '/backuprs.RegistryServer/GetWriteReplicaList',
                request_serializer=registryserver__pb2.ClientDetails.SerializeToString,
                response_deserializer=registryserver__pb2.ReplicaList.FromString,
                )


class RegistryServerServicer(object):
    """Registry server messages
    """

    def RegisterReplica(self, request, context):
        """Register a live replica
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReplicaList(self, request, context):
        """Get the whole Replica list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReadReplicaList(self, request, context):
        """Get replica list for read operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWriteReplicaList(self, request, context):
        """Get replica list for write operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistryServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterReplica,
                    request_deserializer=registryserver__pb2.ReplicaDetails.FromString,
                    response_serializer=registryserver__pb2.RequestStatus.SerializeToString,
            ),
            'GetReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReplicaList,
                    request_deserializer=registryserver__pb2.ClientDetails.FromString,
                    response_serializer=registryserver__pb2.ReplicaList.SerializeToString,
            ),
            'GetReadReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReadReplicaList,
                    request_deserializer=registryserver__pb2.ClientDetails.FromString,
                    response_serializer=registryserver__pb2.ReplicaList.SerializeToString,
            ),
            'GetWriteReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWriteReplicaList,
                    request_deserializer=registryserver__pb2.ClientDetails.FromString,
                    response_serializer=registryserver__pb2.ReplicaList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'backuprs.RegistryServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegistryServer(object):
    """Registry server messages
    """

    @staticmethod
    def RegisterReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backuprs.RegistryServer/RegisterReplica',
            registryserver__pb2.ReplicaDetails.SerializeToString,
            registryserver__pb2.RequestStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backuprs.RegistryServer/GetReplicaList',
            registryserver__pb2.ClientDetails.SerializeToString,
            registryserver__pb2.ReplicaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReadReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backuprs.RegistryServer/GetReadReplicaList',
            registryserver__pb2.ClientDetails.SerializeToString,
            registryserver__pb2.ReplicaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWriteReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backuprs.RegistryServer/GetWriteReplicaList',
            registryserver__pb2.ClientDetails.SerializeToString,
            registryserver__pb2.ReplicaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
